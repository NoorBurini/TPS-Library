@using DataAccessLayer.Entities
@using DataAccessLayer.Data
@using Microsoft.AspNetCore.Identity
@model IEnumerable<Shelf>
@inject UserManager<AppUser> UserManager

@{
    var categories = ((IQueryable<string>)ViewBag.categories).ToList();
    var userCount = UserManager.Users.Count();
    userCount--; //remove the admin from the user count
    ViewData["Title"] = "Dashboard";
}
<style>
    .card {
        background-color: rgba(144, 85, 253, 1);
    }
</style>

<div class="container m-4">
    <div class="row justify-content-center">
        <div class="col-md-3 ">
            <div class="card text-white">
                <div class="card-body">
                    <h6 class="card-title text-white">Number of Shelves</h6>
                    <p class="card-text">@Model.Count()</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white">
                <div class="card-body">
                    <h6 class="card-title text-white">Number of Books</h6>
                    <p class="card-text">@ViewBag.bookCount</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 ">
            <div class="card text-white">
                <div class="card-body">
                    <h6 class="card-title text-white">Number of Categories</h6>
                    <p class="card-text">@categories.Count()</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white">
                <div class="card-body">
                    <h6 class="card-title text-white">Number of Users</h6>
                    <p class="card-text">@userCount</p>
                </div>
            </div>
        </div>
        
    </div>

</div>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6 border ">
            <h3 class="text-center">Books per Shelf</h3>
            <canvas id="myChart1" width="200" height="150"></canvas>
        </div>
        <div class="col-md-6 border">
            <h3 class="text-center">Books by Category</h3>
            <canvas id="myChart2" width="100" height="100"></canvas>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx1 = document.getElementById('myChart1');
    const ctx2 = document.getElementById('myChart2');

    const shelfNames = @Html.Raw(Json.Serialize(Model.Select(s => s.ShelfName)));
    const bookCounts = @Html.Raw(Json.Serialize(ViewBag.bookCounts));

    const categories = @Html.Raw(Json.Serialize(categories));
    const categoryCounts = @Html.Raw(Json.Serialize(ViewBag.categoryCounts));
 
    new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: shelfNames,
            datasets: [{
                label: '# of Books',
                data: bookCounts,
                borderWidth: 1,
                backgroundColor: 'rgba(144, 85, 253, 0.75)'
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                        ticks: {
                        stepSize: 1 
                    }

                }
            }
        }
    });

    new Chart(ctx2, {
        type: 'pie',
        data: {
            labels: categories,
            datasets: [{
                label: '# of Books',
                data: categoryCounts,
                backgroundColor: [
                    'rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 205, 86)',
                    'rgb(121, 246, 121)',
                    'rgb(184,121,246)',
                    'rgb(104,103,250)',
                ],
                hoverOffset: 4
            }]
        }
    });
</script>


